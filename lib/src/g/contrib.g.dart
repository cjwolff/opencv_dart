// coverage:ignore-file
// opencv_dart - OpenCV bindings for Dart language
//    some c wrappers were from gocv: https://github.com/hybridgroup/gocv
//    License: Apache-2.0 https://github.com/hybridgroup/gocv/blob/release/LICENSE.txt
// Author: Rainyl
// License: Apache-2.0
// Date: 2024/01/28

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
@ffi.DefaultAsset('package:opencv_dart/opencv_dart.dart')
library;

import 'dart:ffi' as ffi;
import 'package:opencv_dart/src/g/types.g.dart' as imp1;
import '' as self;

@ffi.Native<ffi.Void Function(ArucoDetectorParametersPtr)>()
external void ArucoDetectorParameters_Close(
  ArucoDetectorParametersPtr ap,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<ArucoDetectorParameters>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_Create(
  ffi.Pointer<ArucoDetectorParameters> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_Create_Async(
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshConstant(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshConstant_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshWinSizeMax(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshWinSizeMax_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshWinSizeMin(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshWinSizeMin_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshWinSizeStep(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAdaptiveThreshWinSizeStep_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Float>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetAprilTagCriticalRad(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Float> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagCriticalRad_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetAprilTagDeglitch(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagDeglitch_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Float>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetAprilTagMaxLineFitMse(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Float> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagMaxLineFitMse_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetAprilTagMaxNmaxima(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagMaxNmaxima_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagMinClusterPixels(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagMinClusterPixels_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagMinWhiteBlackDiff(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagMinWhiteBlackDiff_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Float>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetAprilTagQuadDecimate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Float> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagQuadDecimate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Float>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetAprilTagQuadSigma(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Float> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetAprilTagQuadSigma_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementMaxIterations(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementMaxIterations_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementMethod(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementMethod_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementMinAccuracy(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementMinAccuracy_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementWinSize(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetCornerRefinementWinSize_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Bool>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetDetectInvertedMarker(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Bool> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetDetectInvertedMarker_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetErrorCorrectionRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetErrorCorrectionRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetMarkerBorderBits(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMarkerBorderBits_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMaxErroneousBitsInBorderRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMaxErroneousBitsInBorderRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMaxMarkerPerimeterRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMaxMarkerPerimeterRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetMinCornerDistanceRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMinCornerDistanceRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetMinDistanceToBorder(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMinDistanceToBorder_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetMinMarkerDistanceRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMinMarkerDistanceRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMinMarkerPerimeterRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetMinMarkerPerimeterRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetMinOtsuStdDev(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_GetMinOtsuStdDev_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetPerspectiveRemoveIgnoredMarginPerCell(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetPerspectiveRemoveIgnoredMarginPerCell_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetPerspectiveRemovePixelPerCell(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetPerspectiveRemovePixelPerCell_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetPolygonalApproxAccuracyRate(
  ArucoDetectorParameters ap,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_GetPolygonalApproxAccuracyRate_Async(
  ArucoDetectorParameters ap,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshConstant(
  ArucoDetectorParameters ap,
  double adaptiveThreshConstant,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshConstant_Async(
  ArucoDetectorParameters ap,
  double adaptiveThreshConstant,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshWinSizeMax(
  ArucoDetectorParameters ap,
  int adaptiveThreshWinSizeMax,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshWinSizeMax_Async(
  ArucoDetectorParameters ap,
  int adaptiveThreshWinSizeMax,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshWinSizeMin(
  ArucoDetectorParameters ap,
  int adaptiveThreshWinSizeMin,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshWinSizeMin_Async(
  ArucoDetectorParameters ap,
  int adaptiveThreshWinSizeMin,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshWinSizeStep(
  ArucoDetectorParameters ap,
  int adaptiveThreshWinSizeStep,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAdaptiveThreshWinSizeStep_Async(
  ArucoDetectorParameters ap,
  int adaptiveThreshWinSizeStep,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Float)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetAprilTagCriticalRad(
  ArucoDetectorParameters ap,
  double aprilTagCriticalRad,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Float, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagCriticalRad_Async(
  ArucoDetectorParameters ap,
  double aprilTagCriticalRad,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetAprilTagDeglitch(
  ArucoDetectorParameters ap,
  int aprilTagDeglitch,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagDeglitch_Async(
  ArucoDetectorParameters ap,
  int aprilTagDeglitch,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Float)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetAprilTagMaxLineFitMse(
  ArucoDetectorParameters ap,
  double aprilTagMaxLineFitMse,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Float, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagMaxLineFitMse_Async(
  ArucoDetectorParameters ap,
  double aprilTagMaxLineFitMse,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetAprilTagMaxNmaxima(
  ArucoDetectorParameters ap,
  int aprilTagMaxNmaxima,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagMaxNmaxima_Async(
  ArucoDetectorParameters ap,
  int aprilTagMaxNmaxima,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagMinClusterPixels(
  ArucoDetectorParameters ap,
  int aprilTagMinClusterPixels,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagMinClusterPixels_Async(
  ArucoDetectorParameters ap,
  int aprilTagMinClusterPixels,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagMinWhiteBlackDiff(
  ArucoDetectorParameters ap,
  int aprilTagMinWhiteBlackDiff,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagMinWhiteBlackDiff_Async(
  ArucoDetectorParameters ap,
  int aprilTagMinWhiteBlackDiff,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Float)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetAprilTagQuadDecimate(
  ArucoDetectorParameters ap,
  double aprilTagQuadDecimate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Float, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagQuadDecimate_Async(
  ArucoDetectorParameters ap,
  double aprilTagQuadDecimate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Float)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetAprilTagQuadSigma(
  ArucoDetectorParameters ap,
  double aprilTagQuadSigma,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Float, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetAprilTagQuadSigma_Async(
  ArucoDetectorParameters ap,
  double aprilTagQuadSigma,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementMaxIterations(
  ArucoDetectorParameters ap,
  int cornerRefinementMaxIterations,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementMaxIterations_Async(
  ArucoDetectorParameters ap,
  int cornerRefinementMaxIterations,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementMethod(
  ArucoDetectorParameters ap,
  int cornerRefinementMethod,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementMethod_Async(
  ArucoDetectorParameters ap,
  int cornerRefinementMethod,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementMinAccuracy(
  ArucoDetectorParameters ap,
  double cornerRefinementMinAccuracy,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementMinAccuracy_Async(
  ArucoDetectorParameters ap,
  double cornerRefinementMinAccuracy,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementWinSize(
  ArucoDetectorParameters ap,
  int cornerRefinementWinSize,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetCornerRefinementWinSize_Async(
  ArucoDetectorParameters ap,
  int cornerRefinementWinSize,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Bool)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetDetectInvertedMarker(
  ArucoDetectorParameters ap,
  bool detectInvertedMarker,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Bool, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetDetectInvertedMarker_Async(
  ArucoDetectorParameters ap,
  bool detectInvertedMarker,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetErrorCorrectionRate(
  ArucoDetectorParameters ap,
  double errorCorrectionRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetErrorCorrectionRate_Async(
  ArucoDetectorParameters ap,
  double errorCorrectionRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetMarkerBorderBits(
  ArucoDetectorParameters ap,
  int markerBorderBits,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMarkerBorderBits_Async(
  ArucoDetectorParameters ap,
  int markerBorderBits,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMaxErroneousBitsInBorderRate(
  ArucoDetectorParameters ap,
  double maxErroneousBitsInBorderRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMaxErroneousBitsInBorderRate_Async(
  ArucoDetectorParameters ap,
  double maxErroneousBitsInBorderRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMaxMarkerPerimeterRate(
  ArucoDetectorParameters ap,
  double maxMarkerPerimeterRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMaxMarkerPerimeterRate_Async(
  ArucoDetectorParameters ap,
  double maxMarkerPerimeterRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetMinCornerDistanceRate(
  ArucoDetectorParameters ap,
  double minCornerDistanceRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMinCornerDistanceRate_Async(
  ArucoDetectorParameters ap,
  double minCornerDistanceRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetMinDistanceToBorder(
  ArucoDetectorParameters ap,
  int minDistanceToBorder,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMinDistanceToBorder_Async(
  ArucoDetectorParameters ap,
  int minDistanceToBorder,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetMinMarkerDistanceRate(
  ArucoDetectorParameters ap,
  double minMarkerDistanceRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMinMarkerDistanceRate_Async(
  ArucoDetectorParameters ap,
  double minMarkerDistanceRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMinMarkerPerimeterRate(
  ArucoDetectorParameters ap,
  double minMarkerPerimeterRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetMinMarkerPerimeterRate_Async(
  ArucoDetectorParameters ap,
  double minMarkerPerimeterRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetMinOtsuStdDev(
  ArucoDetectorParameters ap,
  double minOtsuStdDev,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus> ArucoDetectorParameters_SetMinOtsuStdDev_Async(
  ArucoDetectorParameters ap,
  double minOtsuStdDev,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetPerspectiveRemoveIgnoredMarginPerCell(
  ArucoDetectorParameters ap,
  double perspectiveRemoveIgnoredMarginPerCell,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetPerspectiveRemoveIgnoredMarginPerCell_Async(
  ArucoDetectorParameters ap,
  double perspectiveRemoveIgnoredMarginPerCell,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Int)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetPerspectiveRemovePixelPerCell(
  ArucoDetectorParameters ap,
  int perspectiveRemovePixelPerCell,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetPerspectiveRemovePixelPerCell_Async(
  ArucoDetectorParameters ap,
  int perspectiveRemovePixelPerCell,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetectorParameters, ffi.Double)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetPolygonalApproxAccuracyRate(
  ArucoDetectorParameters ap,
  double polygonalApproxAccuracyRate,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetectorParameters, ffi.Double, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus>
    ArucoDetectorParameters_SetPolygonalApproxAccuracyRate_Async(
  ArucoDetectorParameters ap,
  double polygonalApproxAccuracyRate,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Void Function(ArucoDetectorPtr)>()
external void ArucoDetector_Close(
  ArucoDetectorPtr ad,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDetector,
        Mat,
        ffi.Pointer<VecVecPoint2f>,
        ffi.Pointer<VecI32>,
        ffi.Pointer<VecVecPoint2f>)>()
external ffi.Pointer<CvStatus> ArucoDetector_DetectMarkers(
  ArucoDetector ad,
  Mat inputArr,
  ffi.Pointer<VecVecPoint2f> markerCorners,
  ffi.Pointer<VecI32> markerIds,
  ffi.Pointer<VecVecPoint2f> rejectedCandidates,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ArucoDetector, Mat, imp1.CvCallback_3)>()
external ffi.Pointer<CvStatus> ArucoDetector_DetectMarkers_Async(
  ArucoDetector ad,
  Mat inputArr,
  imp1.CvCallback_3 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<ArucoDetector>)>()
external ffi.Pointer<CvStatus> ArucoDetector_New(
  ffi.Pointer<ArucoDetector> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDictionary, ArucoDetectorParameters, ffi.Pointer<ArucoDetector>)>()
external ffi.Pointer<CvStatus> ArucoDetector_NewWithParams(
  ArucoDictionary dictionary,
  ArucoDetectorParameters params,
  ffi.Pointer<ArucoDetector> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ArucoDictionary, ArucoDetectorParameters, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ArucoDetector_NewWithParams_Async(
  ArucoDictionary dictionary,
  ArucoDetectorParameters params,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ArucoDetector_New_Async(
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Void Function(ArucoDictionaryPtr)>()
external void ArucoDictionary_Close(
  ArucoDictionaryPtr self,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(Mat, VecVecPoint2f, VecI32, Scalar)>()
external ffi.Pointer<CvStatus> ArucoDrawDetectedMarkers(
  Mat image,
  VecVecPoint2f markerCorners,
  VecI32 markerIds,
  Scalar borderColor,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, VecVecPoint2f, VecI32, Scalar, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus> ArucoDrawDetectedMarkers_Async(
  Mat image,
  VecVecPoint2f markerCorners,
  VecI32 markerIds,
  Scalar borderColor,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Int, ffi.Int, ffi.Int, ffi.Int, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ArucoGenerateImageMarker(
  int dictionaryId,
  int id,
  int sidePixels,
  int borderBits,
  ffi.Pointer<Mat> img,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Int, ffi.Int, ffi.Int, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ArucoGenerateImageMarker_Async(
  int dictionaryId,
  int id,
  int sidePixels,
  int borderBits,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Void Function(BlockMeanHashPtr)>()
external void BlockMeanHash_Close(
  BlockMeanHashPtr self,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        BlockMeanHash, Mat, Mat, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> BlockMeanHash_Compare(
  BlockMeanHash self,
  Mat hashOne,
  Mat hashTwo,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        BlockMeanHash, Mat, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> BlockMeanHash_Compare_Async(
  BlockMeanHash self,
  Mat hashOne,
  Mat hashTwo,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(BlockMeanHash, Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> BlockMeanHash_Compute(
  BlockMeanHash self,
  Mat inputArr,
  ffi.Pointer<Mat> outputArr,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(BlockMeanHash, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> BlockMeanHash_Compute_Async(
  BlockMeanHash self,
  Mat inputArr,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Int, ffi.Pointer<BlockMeanHash>)>()
external ffi.Pointer<CvStatus> BlockMeanHash_Create(
  int mode,
  ffi.Pointer<BlockMeanHash> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> BlockMeanHash_Create_Async(
  int mode,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(BlockMeanHash,
        ffi.Pointer<ffi.Pointer<ffi.Double>>, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> BlockMeanHash_GetMean(
  BlockMeanHash self,
  ffi.Pointer<ffi.Pointer<ffi.Double>> rval,
  ffi.Pointer<ffi.Int> length,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(BlockMeanHash, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> BlockMeanHash_GetMean_Async(
  BlockMeanHash self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(BlockMeanHash, ffi.Int)>()
external ffi.Pointer<CvStatus> BlockMeanHash_SetMode(
  BlockMeanHash self,
  int mode,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(BlockMeanHash, ffi.Int, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus> BlockMeanHash_SetMode_Async(
  BlockMeanHash self,
  int mode,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Void Function(PtrWBDetectorPtr)>()
external void WBDetector_Close(
  PtrWBDetectorPtr self,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<PtrWBDetector>)>()
external ffi.Pointer<CvStatus> WBDetector_Create(
  ffi.Pointer<PtrWBDetector> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<PtrWBDetector>, Mat,
        ffi.Pointer<VecRect>, ffi.Pointer<VecF64>)>()
external ffi.Pointer<CvStatus> WBDetector_Detect(
  ffi.Pointer<PtrWBDetector> self,
  Mat img,
  ffi.Pointer<VecRect> bbox,
  ffi.Pointer<VecF64> confidences,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<PtrWBDetector>, ffi.Pointer<ffi.Char>)>()
external ffi.Pointer<CvStatus> WBDetector_Read(
  ffi.Pointer<PtrWBDetector> self,
  ffi.Pointer<ffi.Char> filename,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<PtrWBDetector>,
        ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>()
external ffi.Pointer<CvStatus> WBDetector_Train(
  ffi.Pointer<PtrWBDetector> self,
  ffi.Pointer<ffi.Char> pos_samples,
  ffi.Pointer<ffi.Char> neg_imgs,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<PtrWBDetector>, ffi.Pointer<ffi.Char>)>()
external ffi.Pointer<CvStatus> WBDetector_Write(
  ffi.Pointer<PtrWBDetector> self,
  ffi.Pointer<ffi.Char> filename,
);

@ffi.Native<ffi.Void Function(WeChatQRCodePtr)>()
external void WeChatQRCode_Close(
  WeChatQRCodePtr self,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<WeChatQRCode>, Mat,
        ffi.Pointer<VecMat>, ffi.Pointer<VecVecChar>)>()
external ffi.Pointer<CvStatus> WeChatQRCode_DetectAndDecode(
  ffi.Pointer<WeChatQRCode> self,
  Mat img,
  ffi.Pointer<VecMat> points,
  ffi.Pointer<VecVecChar> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<WeChatQRCode>, Mat, imp1.CvCallback_2)>()
external ffi.Pointer<CvStatus> WeChatQRCode_DetectAndDecode_Async(
  ffi.Pointer<WeChatQRCode> self,
  Mat img,
  imp1.CvCallback_2 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<WeChatQRCode>, ffi.Pointer<ffi.Float>)>()
external ffi.Pointer<CvStatus> WeChatQRCode_GetScaleFactor(
  ffi.Pointer<WeChatQRCode> self,
  ffi.Pointer<ffi.Float> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<WeChatQRCode>, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> WeChatQRCode_GetScaleFactor_Async(
  ffi.Pointer<WeChatQRCode> self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<WeChatQRCode>)>()
external ffi.Pointer<CvStatus> WeChatQRCode_New(
  ffi.Pointer<WeChatQRCode> qrcode,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>,
        ffi.Pointer<WeChatQRCode>)>()
external ffi.Pointer<CvStatus> WeChatQRCode_NewWithParams(
  ffi.Pointer<ffi.Char> detector_prototxt_path,
  ffi.Pointer<ffi.Char> detector_caffe_model_path,
  ffi.Pointer<ffi.Char> super_resolution_prototxt_path,
  ffi.Pointer<ffi.Char> super_resolution_caffe_model_path,
  ffi.Pointer<WeChatQRCode> qrcode,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
        ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> WeChatQRCode_NewWithParams_Async(
  ffi.Pointer<ffi.Char> detector_prototxt_path,
  ffi.Pointer<ffi.Char> detector_caffe_model_path,
  ffi.Pointer<ffi.Char> super_resolution_prototxt_path,
  ffi.Pointer<ffi.Char> super_resolution_caffe_model_path,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> WeChatQRCode_New_Async(
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<WeChatQRCode>, ffi.Float)>()
external ffi.Pointer<CvStatus> WeChatQRCode_SetScaleFactor(
  ffi.Pointer<WeChatQRCode> self,
  double scale_factor,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<WeChatQRCode>, ffi.Float, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus> WeChatQRCode_SetScaleFactor_Async(
  ffi.Pointer<WeChatQRCode> self,
  double scale_factor,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> averageHashCompare(
  Mat a,
  Mat b,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> averageHashCompare_Async(
  Mat a,
  Mat b,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> averageHashCompute(
  Mat inputArr,
  ffi.Pointer<Mat> outputArr,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> averageHashCompute_Async(
  Mat inputArr,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> colorMomentHashCompare(
  Mat a,
  Mat b,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> colorMomentHashCompare_Async(
  Mat a,
  Mat b,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> colorMomentHashCompute(
  Mat inputArr,
  ffi.Pointer<Mat> outputArr,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> colorMomentHashCompute_Async(
  Mat inputArr,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Int, ffi.Pointer<ArucoDictionary>)>()
external ffi.Pointer<CvStatus> getPredefinedDictionary(
  int dictionaryId,
  ffi.Pointer<ArucoDictionary> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> getPredefinedDictionary_Async(
  int dictionaryId,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, Mat, ffi.Float, ffi.Float, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> marrHildrethHashCompare(
  Mat a,
  Mat b,
  double alpha,
  double scale,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, Mat, ffi.Float, ffi.Float, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> marrHildrethHashCompare_Async(
  Mat a,
  Mat b,
  double alpha,
  double scale,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Float, ffi.Float)>()
external ffi.Pointer<CvStatus> marrHildrethHashCompute(
  Mat inputArr,
  ffi.Pointer<Mat> outputArr,
  double alpha,
  double scale,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Float, ffi.Float, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> marrHildrethHashCompute_Async(
  Mat inputArr,
  double alpha,
  double scale,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> pHashCompare(
  Mat a,
  Mat b,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> pHashCompare_Async(
  Mat a,
  Mat b,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> pHashCompute(
  Mat inputArr,
  ffi.Pointer<Mat> outputArr,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> pHashCompute_Async(
  Mat inputArr,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, Mat, ffi.Double, ffi.Int, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> radialVarianceHashCompare(
  Mat a,
  Mat b,
  double sigma,
  int numOfAngleLine,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, Mat, ffi.Double, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> radialVarianceHashCompare_Async(
  Mat a,
  Mat b,
  double sigma,
  int numOfAngleLine,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Double, ffi.Int)>()
external ffi.Pointer<CvStatus> radialVarianceHashCompute(
  Mat inputArr,
  ffi.Pointer<Mat> outputArr,
  double sigma,
  int numOfAngleLine,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Double, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> radialVarianceHashCompute_Async(
  Mat inputArr,
  double sigma,
  int numOfAngleLine,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        EdgeBoxes, Mat, Mat, ffi.Pointer<VecRect>, ffi.Pointer<VecF32>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeBoxes_getBoundingBoxes(
  EdgeBoxes self,
  Mat edge_map,
  Mat orientation_map,
  ffi.Pointer<VecRect> boxes,
  ffi.Pointer<VecF32> scores,
);

@ffi.Native<ffi.Void Function(EdgeDrawingPtr)>()
external void ximgproc_EdgeDrawing_Close(
  EdgeDrawingPtr self,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<EdgeDrawing>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_Create(
  ffi.Pointer<EdgeDrawing> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_Create_Async(
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, Mat)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_detectEdges(
  EdgeDrawing self,
  Mat src,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(EdgeDrawing, Mat, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_detectEdges_Async(
  EdgeDrawing self,
  Mat src,
  imp1.CvCallback_0 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_detectEllipses(
  EdgeDrawing self,
  ffi.Pointer<Mat> ellipses,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_detectEllipses_Async(
  EdgeDrawing self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_detectLines(
  EdgeDrawing self,
  ffi.Pointer<Mat> lines,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_detectLines_Async(
  EdgeDrawing self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getEdgeImage(
  EdgeDrawing self,
  ffi.Pointer<Mat> dst,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getEdgeImage_Async(
  EdgeDrawing self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getGradientImage(
  EdgeDrawing self,
  ffi.Pointer<Mat> dst,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getGradientImage_Async(
  EdgeDrawing self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        EdgeDrawing, ffi.Pointer<EdgeDrawingParams>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getParams(
  EdgeDrawing self,
  ffi.Pointer<EdgeDrawingParams> params,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, ffi.Pointer<VecI32>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getSegmentIndicesOfLines(
  EdgeDrawing self,
  ffi.Pointer<VecI32> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ximgproc_EdgeDrawing_getSegmentIndicesOfLines_Async(
  EdgeDrawing self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(EdgeDrawing, ffi.Pointer<VecVecPoint>)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getSegments(
  EdgeDrawing self,
  ffi.Pointer<VecVecPoint> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_getSegments_Async(
  EdgeDrawing self,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(EdgeDrawing, EdgeDrawingParams)>()
external ffi.Pointer<CvStatus> ximgproc_EdgeDrawing_setParams(
  EdgeDrawing self,
  EdgeDrawingParams params,
);

@ffi.Native<ffi.Void Function(GraphSegmentationPtr)>()
external void ximgproc_GraphSegmentation_Close(
  GraphSegmentationPtr self,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Float, ffi.Float, ffi.Int, ffi.Pointer<GraphSegmentation>)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_Create(
  double sigma,
  double k,
  int min_size,
  ffi.Pointer<GraphSegmentation> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Float, ffi.Float, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_Create_Async(
  double sigma,
  double k,
  int min_size,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GraphSegmentation, ffi.Pointer<ffi.Float>)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_getK(
  GraphSegmentation self,
  ffi.Pointer<ffi.Float> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GraphSegmentation, ffi.Pointer<ffi.Int>)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_getMinSize(
  GraphSegmentation self,
  ffi.Pointer<ffi.Int> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        GraphSegmentation, ffi.Pointer<ffi.Double>)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_getSigma(
  GraphSegmentation self,
  ffi.Pointer<ffi.Double> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GraphSegmentation, Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_processImage(
  GraphSegmentation self,
  Mat src,
  ffi.Pointer<Mat> dst,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(GraphSegmentation, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_processImage_Async(
  GraphSegmentation self,
  Mat src,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GraphSegmentation, ffi.Float)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_setK(
  GraphSegmentation self,
  double val,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GraphSegmentation, ffi.Int)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_setMinSize(
  GraphSegmentation self,
  int val,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(GraphSegmentation, ffi.Double)>()
external ffi.Pointer<CvStatus> ximgproc_GraphSegmentation_setSigma(
  GraphSegmentation self,
  double val,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_PeiLinNormalization(
  Mat I,
  ffi.Pointer<Mat> dst,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_PeiLinNormalization_Async(
  Mat I,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(RFFeatureGetter)>()
external ffi.Pointer<CvStatus> ximgproc_RFFeatureGetter_Clear(
  RFFeatureGetter self,
);

@ffi.Native<ffi.Void Function(RFFeatureGetterPtr)>()
external void ximgproc_RFFeatureGetter_Close(
  RFFeatureGetterPtr self,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Pointer<RFFeatureGetter>)>()
external ffi.Pointer<CvStatus> ximgproc_RFFeatureGetter_Create(
  ffi.Pointer<RFFeatureGetter> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_RFFeatureGetter_Create_Async(
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(RFFeatureGetter, ffi.Pointer<ffi.Bool>)>()
external ffi.Pointer<CvStatus> ximgproc_RFFeatureGetter_Empty(
  RFFeatureGetter self,
  ffi.Pointer<ffi.Bool> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(RFFeatureGetter, Mat, ffi.Pointer<Mat>,
        ffi.Int, ffi.Int, ffi.Int, ffi.Int, ffi.Int)>()
external ffi.Pointer<CvStatus> ximgproc_RFFeatureGetter_getFeatures(
  RFFeatureGetter self,
  Mat src,
  ffi.Pointer<Mat> features,
  int gnrmRad,
  int gsmthRad,
  int shrink,
  int outNum,
  int gradNum,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(RFFeatureGetter, Mat, ffi.Int, ffi.Int,
        ffi.Int, ffi.Int, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_RFFeatureGetter_getFeatures_Async(
  RFFeatureGetter self,
  Mat src,
  int gnrmRad,
  int gsmthRad,
  int shrink,
  int outNum,
  int gradNum,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Void Function(StructuredEdgeDetectionPtr)>()
external void ximgproc_StructuredEdgeDetection_Close(
  StructuredEdgeDetectionPtr self,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<ffi.Char>, ffi.Pointer<StructuredEdgeDetection>)>()
external ffi.Pointer<CvStatus> ximgproc_StructuredEdgeDetection_Create(
  ffi.Pointer<ffi.Char> model,
  ffi.Pointer<StructuredEdgeDetection> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(ffi.Pointer<ffi.Char>, RFFeatureGetter,
        ffi.Pointer<StructuredEdgeDetection>)>()
external ffi.Pointer<CvStatus> ximgproc_StructuredEdgeDetection_Create_1(
  ffi.Pointer<ffi.Char> model,
  RFFeatureGetter howToGetFeatures,
  ffi.Pointer<StructuredEdgeDetection> rval,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        ffi.Pointer<ffi.Char>, RFFeatureGetter, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_StructuredEdgeDetection_Create_Async(
  ffi.Pointer<ffi.Char> model,
  RFFeatureGetter howToGetFeatures,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        StructuredEdgeDetection, Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus>
    ximgproc_StructuredEdgeDetection_computeOrientation(
  StructuredEdgeDetection self,
  Mat src,
  ffi.Pointer<Mat> dst,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        StructuredEdgeDetection, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ximgproc_StructuredEdgeDetection_computeOrientation_Async(
  StructuredEdgeDetection self,
  Mat src,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        StructuredEdgeDetection, Mat, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_StructuredEdgeDetection_detectEdges(
  StructuredEdgeDetection self,
  Mat src,
  ffi.Pointer<Mat> dst,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        StructuredEdgeDetection, Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus>
    ximgproc_StructuredEdgeDetection_detectEdges_Async(
  StructuredEdgeDetection self,
  Mat src,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(StructuredEdgeDetection, Mat, Mat,
        ffi.Pointer<Mat>, ffi.Int, ffi.Int, ffi.Float, ffi.Bool)>()
external ffi.Pointer<CvStatus> ximgproc_StructuredEdgeDetection_edgesNms(
  StructuredEdgeDetection self,
  Mat edge_image,
  Mat orientation_image,
  ffi.Pointer<Mat> dst,
  int r,
  int s,
  double m,
  bool isParallel,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(StructuredEdgeDetection, Mat, Mat, ffi.Int,
        ffi.Int, ffi.Float, ffi.Bool, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_StructuredEdgeDetection_edgesNms_Async(
  StructuredEdgeDetection self,
  Mat edge_image,
  Mat orientation_image,
  int r,
  int s,
  double m,
  bool isParallel,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Float, ffi.Float, ffi.Int)>()
external ffi.Pointer<CvStatus> ximgproc_anisotropicDiffusion(
  Mat src,
  ffi.Pointer<Mat> dst,
  double alpha,
  double K,
  int niters,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Float, ffi.Float, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_anisotropicDiffusion_Async(
  Mat src,
  double alpha,
  double K,
  int niters,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Int, ffi.Double)>()
external ffi.Pointer<CvStatus> ximgproc_edgePreservingFilter(
  Mat src,
  ffi.Pointer<Mat> dst,
  int d,
  double threshold,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Int, ffi.Double, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_edgePreservingFilter_Async(
  Mat src,
  int d,
  double threshold,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Float, ffi.Float, ffi.Float)>()
external ffi.Pointer<CvStatus> ximgproc_findEllipses(
  Mat image,
  ffi.Pointer<Mat> ellipses,
  double scoreThreshold,
  double reliabilityThreshold,
  double centerDistanceThreshold,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Float, ffi.Float, ffi.Float, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_findEllipses_Async(
  Mat image,
  double scoreThreshold,
  double reliabilityThreshold,
  double centerDistanceThreshold,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>, ffi.Double, ffi.Int,
        ffi.Int, ffi.Double, ffi.Int, ffi.Double)>()
external ffi.Pointer<CvStatus> ximgproc_niBlackThreshold(
  Mat src,
  ffi.Pointer<Mat> dst,
  double maxValue,
  int type,
  int blockSize,
  double k,
  int binarizationMethod,
  double r,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(Mat, ffi.Double, ffi.Int, ffi.Int,
        ffi.Double, ffi.Int, ffi.Double, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_niBlackThreshold_Async(
  Mat src,
  double maxValue,
  int type,
  int blockSize,
  double k,
  int binarizationMethod,
  double r,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint3i, ffi.Pointer<Mat>, Size)>()
external ffi.Pointer<CvStatus> ximgproc_rl_createRLEImage(
  VecPoint3i runs,
  ffi.Pointer<Mat> res,
  Size size,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(VecPoint3i, Size, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_createRLEImage_Async(
  VecPoint3i runs,
  Size size,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>, Mat, Point)>()
external ffi.Pointer<CvStatus> ximgproc_rl_dilate(
  Mat rlSrc,
  ffi.Pointer<Mat> rlDest,
  Mat rlKernel,
  Point anchor,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(Mat, Mat, Point, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_dilate_Async(
  Mat rlSrc,
  Mat rlKernel,
  Point anchor,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, Mat, ffi.Bool, Point)>()
external ffi.Pointer<CvStatus> ximgproc_rl_erode(
  Mat rlSrc,
  ffi.Pointer<Mat> rlDest,
  Mat rlKernel,
  bool bBoundaryOn,
  Point anchor,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, Mat, ffi.Bool, Point, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_erode_Async(
  Mat rlSrc,
  Mat rlKernel,
  bool bBoundaryOn,
  Point anchor,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Int, Size, ffi.Pointer<Mat>)>()
external ffi.Pointer<CvStatus> ximgproc_rl_getStructuringElement(
  int shape,
  Size ksize,
  ffi.Pointer<Mat> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(ffi.Int, Size, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_getStructuringElement_Async(
  int shape,
  Size ksize,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<ffi.Bool>)>()
external ffi.Pointer<CvStatus> ximgproc_rl_isRLMorphologyPossible(
  Mat rlStructuringElement,
  ffi.Pointer<ffi.Bool> rval,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_isRLMorphologyPossible_Async(
  Mat rlStructuringElement,
  imp1.CvCallback_1 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Int, Mat, ffi.Bool, Point)>()
external ffi.Pointer<CvStatus> ximgproc_rl_morphologyEx(
  Mat rlSrc,
  ffi.Pointer<Mat> rlDest,
  int op,
  Mat rlKernel,
  bool bBoundaryOnForErosion,
  Point anchor,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Int, Mat, ffi.Bool, Point, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_morphologyEx_Async(
  Mat rlSrc,
  int op,
  Mat rlKernel,
  bool bBoundaryOnForErosion,
  Point anchor,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, Mat, Scalar)>()
external ffi.Pointer<CvStatus> ximgproc_rl_paint(
  Mat image,
  Mat rlSrc,
  Scalar value,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(Mat, Mat, Scalar, imp1.CvCallback_0)>()
external ffi.Pointer<CvStatus> ximgproc_rl_paint_Async(
  Mat image,
  Mat rlSrc,
  Scalar value,
  imp1.CvCallback_0 callback,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Pointer<Mat>, ffi.Double, ffi.Int)>()
external ffi.Pointer<CvStatus> ximgproc_rl_threshold(
  Mat src,
  ffi.Pointer<Mat> rlDest,
  double thresh,
  int type,
);

@ffi.Native<
    ffi.Pointer<CvStatus> Function(
        Mat, ffi.Double, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_rl_threshold_Async(
  Mat src,
  double thresh,
  int type,
  imp1.CvCallback_1 callback,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Pointer<Mat>, ffi.Int)>()
external ffi.Pointer<CvStatus> ximgproc_thinning(
  Mat src,
  ffi.Pointer<Mat> dst,
  int thinningType,
);

@ffi.Native<ffi.Pointer<CvStatus> Function(Mat, ffi.Int, imp1.CvCallback_1)>()
external ffi.Pointer<CvStatus> ximgproc_thinning_Async(
  Mat src,
  int thinningType,
  imp1.CvCallback_1 callback,
);

const addresses = _SymbolAddresses();

class _SymbolAddresses {
  const _SymbolAddresses();
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ArucoDetectorParametersPtr)>>
      get ArucoDetectorParameters_Close =>
          ffi.Native.addressOf(self.ArucoDetectorParameters_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ArucoDetectorPtr)>>
      get ArucoDetector_Close => ffi.Native.addressOf(self.ArucoDetector_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(ArucoDictionaryPtr)>>
      get ArucoDictionary_Close =>
          ffi.Native.addressOf(self.ArucoDictionary_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(BlockMeanHashPtr)>>
      get BlockMeanHash_Close => ffi.Native.addressOf(self.BlockMeanHash_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(PtrWBDetectorPtr)>>
      get WBDetector_Close => ffi.Native.addressOf(self.WBDetector_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(WeChatQRCodePtr)>>
      get WeChatQRCode_Close => ffi.Native.addressOf(self.WeChatQRCode_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(EdgeDrawingPtr)>>
      get ximgproc_EdgeDrawing_Close =>
          ffi.Native.addressOf(self.ximgproc_EdgeDrawing_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(GraphSegmentationPtr)>>
      get ximgproc_GraphSegmentation_Close =>
          ffi.Native.addressOf(self.ximgproc_GraphSegmentation_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(RFFeatureGetterPtr)>>
      get ximgproc_RFFeatureGetter_Close =>
          ffi.Native.addressOf(self.ximgproc_RFFeatureGetter_Close);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(StructuredEdgeDetectionPtr)>>
      get ximgproc_StructuredEdgeDetection_Close =>
          ffi.Native.addressOf(self.ximgproc_StructuredEdgeDetection_Close);
}

final class ArucoDetector extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

final class ArucoDetectorParameters extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef ArucoDetectorParametersPtr = ffi.Pointer<ArucoDetectorParameters>;
typedef ArucoDetectorPtr = ffi.Pointer<ArucoDetector>;

final class ArucoDictionary extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef ArucoDictionaryPtr = ffi.Pointer<ArucoDictionary>;

const int BLOCK_MEAN_HASH_MODE_0 = 0;

const int BLOCK_MEAN_HASH_MODE_1 = 1;

final class BlockMeanHash extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef BlockMeanHashPtr = ffi.Pointer<BlockMeanHash>;

final class Box extends ffi.Struct {
  @ffi.Int()
  external int h;

  @ffi.Float()
  external double score;

  @ffi.Int()
  external int w;

  @ffi.Int()
  external int x;

  @ffi.Int()
  external int y;
}

typedef CvStatus = imp1.CvStatus;

final class EdgeBoxes extends ffi.Struct {
  @ffi.Float()
  external double alpha;

  @ffi.Float()
  external double beta;

  @ffi.Float()
  external double eta;

  @ffi.Float()
  external double minScore;

  @ffi.Int()
  external int maxBoxes;

  @ffi.Float()
  external double edgeMinMag;

  @ffi.Float()
  external double edgeMergeThr;

  @ffi.Float()
  external double clusterMinMag;

  @ffi.Float()
  external double maxAspectRatio;

  @ffi.Float()
  external double minBoxArea;

  @ffi.Float()
  external double gamma;

  @ffi.Float()
  external double kappa;
}

final class EdgeDrawing extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;
}

final class EdgeDrawingParams extends ffi.Struct {
  @ffi.Int()
  external int AnchorThresholdValue;

  @ffi.Int()
  external int EdgeDetectionOperator;

  @ffi.Int()
  external int GradientThresholdValue;

  @ffi.Double()
  external double LineFitErrorThreshold;

  @ffi.Double()
  external double MaxDistanceBetweenTwoLines;

  @ffi.Double()
  external double MaxErrorThreshold;

  @ffi.Int()
  external int MinLineLength;

  @ffi.Int()
  external int MinPathLength;

  @ffi.Bool()
  external bool NFAValidation;

  @ffi.Bool()
  external bool PFmode;

  @ffi.Int()
  external int ScanInterval;

  @ffi.Float()
  external double Sigma;

  @ffi.Bool()
  external bool SumFlag;
}

typedef EdgeDrawingPtr = ffi.Pointer<EdgeDrawing>;

final class GraphSegmentation extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;
}

typedef GraphSegmentationPtr = ffi.Pointer<GraphSegmentation>;
typedef Mat = imp1.Mat;
typedef Point = imp1.Point;

final class PtrWBDetector extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;
}

typedef PtrWBDetectorPtr = ffi.Pointer<PtrWBDetector>;

final class RFFeatureGetter extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;
}

typedef RFFeatureGetterPtr = ffi.Pointer<RFFeatureGetter>;
typedef Scalar = imp1.Scalar;
typedef Size = imp1.Size;

final class StructuredEdgeDetection extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;
}

typedef StructuredEdgeDetectionPtr = ffi.Pointer<StructuredEdgeDetection>;
typedef VecF32 = imp1.VecF32;
typedef VecF64 = imp1.VecF64;
typedef VecI32 = imp1.VecI32;
typedef VecMat = imp1.VecMat;
typedef VecPoint3i = imp1.VecPoint3i;
typedef VecRect = imp1.VecRect;
typedef VecVecChar = imp1.VecVecChar;
typedef VecVecPoint = imp1.VecVecPoint;
typedef VecVecPoint2f = imp1.VecVecPoint2f;

final class WeChatQRCode extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

typedef WeChatQRCodePtr = ffi.Pointer<WeChatQRCode>;
